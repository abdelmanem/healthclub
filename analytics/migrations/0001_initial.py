# Generated by Django 5.2.6 on 2025-09-12 23:07

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='KPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('kpi_type', models.CharField(choices=[('revenue', 'Revenue'), ('bookings', 'Bookings'), ('guests', 'Guests'), ('employees', 'Employees'), ('inventory', 'Inventory'), ('marketing', 'Marketing'), ('financial', 'Financial')], max_length=20)),
                ('unit', models.CharField(choices=[('count', 'Count'), ('currency', 'Currency'), ('percentage', 'Percentage'), ('rate', 'Rate'), ('time', 'Time')], max_length=20)),
                ('calculation_method', models.CharField(help_text='Method to calculate this KPI', max_length=100)),
                ('calculation_params', models.JSONField(blank=True, default=dict)),
                ('target_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('warning_threshold', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('critical_threshold', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('display_format', models.CharField(default='{value}', help_text='Format string for display', max_length=50)),
                ('color_scheme', models.CharField(choices=[('default', 'Default'), ('green', 'Green'), ('red', 'Red'), ('blue', 'Blue'), ('yellow', 'Yellow')], default='default', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['kpi_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('alert_type', models.CharField(choices=[('kpi', 'KPI Alert'), ('inventory', 'Inventory Alert'), ('financial', 'Financial Alert'), ('operational', 'Operational Alert'), ('system', 'System Alert')], max_length=20)),
                ('severity', models.CharField(choices=[('info', 'Info'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical')], max_length=20)),
                ('trigger_condition', models.CharField(max_length=500)),
                ('trigger_params', models.JSONField(blank=True, default=dict)),
                ('notification_enabled', models.BooleanField(default=True)),
                ('email_recipients', models.JSONField(blank=True, default=list)),
                ('sms_recipients', models.JSONField(blank=True, default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('is_triggered', models.BooleanField(default=False)),
                ('triggered_at', models.DateTimeField(blank=True, null=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('layout_config', models.JSONField(blank=True, default=dict)),
                ('is_public', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_dashboards', to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ManyToManyField(blank=True, related_name='shared_dashboards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('widget_type', models.CharField(choices=[('chart', 'Chart'), ('metric', 'Metric'), ('table', 'Table'), ('gauge', 'Gauge'), ('progress', 'Progress Bar'), ('list', 'List')], max_length=20)),
                ('chart_type', models.CharField(blank=True, choices=[('line', 'Line Chart'), ('bar', 'Bar Chart'), ('pie', 'Pie Chart'), ('doughnut', 'Doughnut Chart'), ('area', 'Area Chart'), ('scatter', 'Scatter Plot')], max_length=20)),
                ('data_source', models.CharField(help_text='Data source identifier', max_length=100)),
                ('query_params', models.JSONField(blank=True, default=dict)),
                ('title', models.CharField(max_length=200)),
                ('subtitle', models.TextField(blank=True)),
                ('size', models.CharField(choices=[('small', 'Small'), ('medium', 'Medium'), ('large', 'Large'), ('full', 'Full Width')], default='medium', max_length=20)),
                ('position_x', models.PositiveIntegerField(default=0)),
                ('position_y', models.PositiveIntegerField(default=0)),
                ('refresh_interval', models.PositiveIntegerField(default=300, help_text='Refresh interval in seconds')),
                ('auto_refresh', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_widgets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['position_y', 'position_x'],
            },
        ),
        migrations.CreateModel(
            name='DashboardWidgetPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_x', models.PositiveIntegerField(default=0)),
                ('position_y', models.PositiveIntegerField(default=0)),
                ('width', models.PositiveIntegerField(default=1)),
                ('height', models.PositiveIntegerField(default=1)),
                ('dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analytics.dashboard')),
                ('widget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analytics.dashboardwidget')),
            ],
            options={
                'ordering': ['position_y', 'position_x'],
                'unique_together': {('dashboard', 'widget')},
            },
        ),
        migrations.AddField(
            model_name='dashboard',
            name='widgets',
            field=models.ManyToManyField(blank=True, through='analytics.DashboardWidgetPosition', to='analytics.dashboardwidget'),
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('report_type', models.CharField(choices=[('financial', 'Financial Report'), ('operational', 'Operational Report'), ('marketing', 'Marketing Report'), ('inventory', 'Inventory Report'), ('employee', 'Employee Report'), ('guest', 'Guest Report'), ('custom', 'Custom Report')], max_length=20)),
                ('data_source', models.CharField(max_length=100)),
                ('query_params', models.JSONField(blank=True, default=dict)),
                ('filters', models.JSONField(blank=True, default=dict)),
                ('available_formats', models.JSONField(blank=True, default=list)),
                ('default_format', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV'), ('json', 'JSON')], default='pdf', max_length=10)),
                ('is_scheduled', models.BooleanField(default=False)),
                ('schedule_cron', models.CharField(blank=True, help_text='Cron expression for scheduling', max_length=100)),
                ('email_recipients', models.JSONField(blank=True, default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ReportExecution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('format', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV'), ('json', 'JSON')], max_length=10)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('error_traceback', models.TextField(blank=True)),
                ('request_params', models.JSONField(blank=True, default=dict)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='analytics.report')),
                ('requested_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='KPIMeasurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=2, max_digits=15)),
                ('measured_at', models.DateTimeField()),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('context_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('kpi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measurements', to='analytics.kpi')),
            ],
            options={
                'ordering': ['-measured_at'],
                'unique_together': {('kpi', 'measured_at', 'period_start', 'period_end')},
            },
        ),
    ]
