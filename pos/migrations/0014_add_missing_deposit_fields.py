# Generated by Django 5.2.6 on 2025-10-22 13:30

from django.db import migrations, models
import django.utils.timezone


def check_and_add_expiry_date(apps, schema_editor):
    """
    Safely add expiry_date column to deposit tables if missing
    """
    from django.db import connection
    
    with connection.cursor() as cursor:
        # Check if expiry_date column exists in pos_deposit
        cursor.execute("""
            SELECT column_name 
            FROM information_schema.columns 
            WHERE table_name = 'pos_deposit' AND column_name = 'expiry_date'
        """)
        deposit_has_column = cursor.fetchone() is not None
        
        # Check if expiry_date column exists in pos_historicaldeposit
        cursor.execute("""
            SELECT column_name 
            FROM information_schema.columns 
            WHERE table_name = 'pos_historicaldeposit' AND column_name = 'expiry_date'
        """)
        historical_has_column = cursor.fetchone() is not None
        
        # Add expiry_date to pos_deposit if missing
        if not deposit_has_column:
            try:
                cursor.execute("ALTER TABLE pos_deposit ADD COLUMN expiry_date timestamp with time zone")
                print("Added expiry_date column to pos_deposit")
            except Exception as e:
                print(f"Could not add expiry_date to pos_deposit: {e}")
        else:
            print("expiry_date column already exists in pos_deposit")
        
        # Add expiry_date to pos_historicaldeposit if missing
        if not historical_has_column:
            try:
                cursor.execute("ALTER TABLE pos_historicaldeposit ADD COLUMN expiry_date timestamp with time zone")
                print("Added expiry_date column to pos_historicaldeposit")
            except Exception as e:
                print(f"Could not add expiry_date to pos_historicaldeposit: {e}")
        else:
            print("expiry_date column already exists in pos_historicaldeposit")


def reverse_add_expiry_date(apps, schema_editor):
    """
    Reverse function - remove expiry_date column if needed
    """
    from django.db import connection
    
    with connection.cursor() as cursor:
        try:
            cursor.execute("ALTER TABLE pos_deposit DROP COLUMN IF EXISTS expiry_date")
            cursor.execute("ALTER TABLE pos_historicaldeposit DROP COLUMN IF EXISTS expiry_date")
            print("Removed expiry_date columns")
        except Exception as e:
            print(f"Could not remove expiry_date columns: {e}")


class Migration(migrations.Migration):

    dependencies = [
        ("pos", "0013_deposit_updated_at"),
    ]

    operations = [
        migrations.RunPython(
            check_and_add_expiry_date,
            reverse_add_expiry_date,
            elidable=True
        ),
    ]
