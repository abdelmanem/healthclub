# Generated by Django 5.2.6 on 2025-09-12 22:12

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('employees', '0002_employee_services'),
        ('pos', '0002_historicalpayment_gateway_response_and_more'),
        ('reservations', '0003_bookingrule_recurringpattern_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmployeeCommission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commission_type', models.CharField(choices=[('service', 'Service Commission'), ('sales', 'Sales Commission'), ('bonus', 'Performance Bonus'), ('overtime', 'Overtime Pay')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('base_amount', models.DecimalField(decimal_places=2, help_text='Amount commission was calculated from', max_digits=10)),
                ('commission_rate', models.DecimalField(decimal_places=2, help_text='Commission rate percentage', max_digits=5)),
                ('is_paid', models.BooleanField(default=False)),
                ('paid_date', models.DateField(blank=True, null=True)),
                ('payment_reference', models.CharField(blank=True, max_length=100)),
                ('earned_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commissions', to='employees.employee')),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_commissions', to='pos.invoice')),
                ('reservation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_commissions', to='reservations.reservation')),
            ],
            options={
                'ordering': ['-earned_date'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeTraining',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_type', models.CharField(choices=[('certification', 'Certification'), ('workshop', 'Workshop'), ('seminar', 'Seminar'), ('online', 'Online Course'), ('on_job', 'On-the-Job Training')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('provider', models.CharField(blank=True, max_length=200)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('certificate_number', models.CharField(blank=True, max_length=100)),
                ('certificate_file', models.FileField(blank=True, upload_to='certificates/')),
                ('expires_date', models.DateField(blank=True, null=True)),
                ('is_expired', models.BooleanField(default=False)),
                ('cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('is_company_paid', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainings', to='employees.employee')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('attendance_type', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('late', 'Late'), ('half_day', 'Half Day'), ('sick_leave', 'Sick Leave'), ('vacation', 'Vacation'), ('personal', 'Personal Leave')], default='present', max_length=20)),
                ('check_in_time', models.TimeField(blank=True, null=True)),
                ('check_out_time', models.TimeField(blank=True, null=True)),
                ('hours_worked', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('leave_reason', models.TextField(blank=True)),
                ('is_approved', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_attendance', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='employees.employee')),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('employee', 'date')},
            },
        ),
        migrations.CreateModel(
            name='EmployeePerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_period_start', models.DateField()),
                ('review_period_end', models.DateField()),
                ('services_completed', models.PositiveIntegerField(default=0)),
                ('customer_rating_avg', models.DecimalField(decimal_places=2, default=0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('revenue_generated', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('commission_earned', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('attendance_rate', models.DecimalField(decimal_places=2, default=0, help_text='Attendance rate percentage', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('overall_rating', models.DecimalField(decimal_places=1, default=0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('strengths', models.TextField(blank=True)),
                ('areas_for_improvement', models.TextField(blank=True)),
                ('goals', models.TextField(blank=True)),
                ('reviewer_notes', models.TextField(blank=True)),
                ('review_date', models.DateField(auto_now_add=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_reviews', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_records', to='employees.employee')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conducted_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-review_date'],
                'unique_together': {('employee', 'review_period_start', 'review_period_end')},
            },
        ),
    ]
