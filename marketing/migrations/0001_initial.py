# Generated by Django 5.2.6 on 2025-09-12 23:07

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('config', '0001_initial'),
        ('guests', '0004_alter_guestcommunication_guest'),
        ('services', '0006_auto_20250913_0032'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MarketingAutomation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('trigger_type', models.CharField(choices=[('guest_signup', 'Guest Signup'), ('appointment_booked', 'Appointment Booked'), ('appointment_completed', 'Appointment Completed'), ('appointment_cancelled', 'Appointment Cancelled'), ('loyalty_tier_changed', 'Loyalty Tier Changed'), ('birthday', 'Birthday'), ('anniversary', 'Anniversary'), ('no_visit_days', 'No Visit for X Days'), ('low_loyalty_points', 'Low Loyalty Points')], max_length=30)),
                ('trigger_conditions', models.JSONField(blank=True, default=dict)),
                ('action_type', models.CharField(choices=[('send_email', 'Send Email'), ('send_sms', 'Send SMS'), ('add_to_segment', 'Add to Segment'), ('remove_from_segment', 'Remove from Segment'), ('award_points', 'Award Points')], max_length=30)),
                ('action_config', models.JSONField(blank=True, default=dict)),
                ('delay_minutes', models.PositiveIntegerField(default=0, help_text='Delay before action in minutes')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EmailCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('campaign_type', models.CharField(choices=[('promotional', 'Promotional'), ('newsletter', 'Newsletter'), ('appointment_reminder', 'Appointment Reminder'), ('loyalty_update', 'Loyalty Update'), ('birthday', 'Birthday'), ('anniversary', 'Anniversary'), ('re_engagement', 'Re-engagement')], max_length=30)),
                ('subject', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('html_content', models.TextField(blank=True)),
                ('target_segment', models.CharField(blank=True, help_text='Target segment criteria', max_length=100)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('sending', 'Sending'), ('sent', 'Sent'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('total_recipients', models.PositiveIntegerField(default=0)),
                ('delivered_count', models.PositiveIntegerField(default=0)),
                ('opened_count', models.PositiveIntegerField(default=0)),
                ('clicked_count', models.PositiveIntegerField(default=0)),
                ('unsubscribed_count', models.PositiveIntegerField(default=0)),
                ('bounced_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_campaigns', to=settings.AUTH_USER_MODEL)),
                ('target_guests', models.ManyToManyField(blank=True, related_name='email_campaigns', to='guests.guest')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('template_type', models.CharField(choices=[('welcome', 'Welcome Email'), ('appointment_confirmation', 'Appointment Confirmation'), ('appointment_reminder', 'Appointment Reminder'), ('cancellation', 'Cancellation'), ('loyalty_points', 'Loyalty Points'), ('birthday', 'Birthday'), ('promotional', 'Promotional'), ('newsletter', 'Newsletter')], max_length=30)),
                ('subject', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('html_content', models.TextField(blank=True)),
                ('variables', models.JSONField(default=list, help_text='Available template variables')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['template_type', 'name'],
                'unique_together': {('name', 'template_type')},
            },
        ),
        migrations.CreateModel(
            name='GuestSegment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('min_visit_count', models.PositiveIntegerField(blank=True, null=True)),
                ('max_visit_count', models.PositiveIntegerField(blank=True, null=True)),
                ('min_total_spent', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_total_spent', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('last_visit_days_ago_min', models.PositiveIntegerField(blank=True, null=True)),
                ('last_visit_days_ago_max', models.PositiveIntegerField(blank=True, null=True)),
                ('email_enabled', models.BooleanField(default=True)),
                ('sms_enabled', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('membership_tiers', models.ManyToManyField(blank=True, to='config.membershiptier')),
                ('preferred_services', models.ManyToManyField(blank=True, to='services.service')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalEmailCampaign',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('campaign_type', models.CharField(choices=[('promotional', 'Promotional'), ('newsletter', 'Newsletter'), ('appointment_reminder', 'Appointment Reminder'), ('loyalty_update', 'Loyalty Update'), ('birthday', 'Birthday'), ('anniversary', 'Anniversary'), ('re_engagement', 'Re-engagement')], max_length=30)),
                ('subject', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('html_content', models.TextField(blank=True)),
                ('target_segment', models.CharField(blank=True, help_text='Target segment criteria', max_length=100)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('sending', 'Sending'), ('sent', 'Sent'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('total_recipients', models.PositiveIntegerField(default=0)),
                ('delivered_count', models.PositiveIntegerField(default=0)),
                ('opened_count', models.PositiveIntegerField(default=0)),
                ('clicked_count', models.PositiveIntegerField(default=0)),
                ('unsubscribed_count', models.PositiveIntegerField(default=0)),
                ('bounced_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical email campaign',
                'verbose_name_plural': 'historical email campaigns',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSMSCampaign',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('campaign_type', models.CharField(choices=[('promotional', 'Promotional'), ('appointment_reminder', 'Appointment Reminder'), ('loyalty_update', 'Loyalty Update'), ('birthday', 'Birthday'), ('emergency', 'Emergency'), ('re_engagement', 'Re-engagement')], max_length=30)),
                ('message', models.TextField(max_length=1600)),
                ('target_segment', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('sending', 'Sending'), ('sent', 'Sent'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('total_recipients', models.PositiveIntegerField(default=0)),
                ('delivered_count', models.PositiveIntegerField(default=0)),
                ('failed_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical sms campaign',
                'verbose_name_plural': 'historical sms campaigns',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='SMSCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('campaign_type', models.CharField(choices=[('promotional', 'Promotional'), ('appointment_reminder', 'Appointment Reminder'), ('loyalty_update', 'Loyalty Update'), ('birthday', 'Birthday'), ('emergency', 'Emergency'), ('re_engagement', 'Re-engagement')], max_length=30)),
                ('message', models.TextField(max_length=1600)),
                ('target_segment', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('sending', 'Sending'), ('sent', 'Sent'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('total_recipients', models.PositiveIntegerField(default=0)),
                ('delivered_count', models.PositiveIntegerField(default=0)),
                ('failed_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_sms_campaigns', to=settings.AUTH_USER_MODEL)),
                ('target_guests', models.ManyToManyField(blank=True, related_name='sms_campaigns', to='guests.guest')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommunicationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('communication_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification'), ('in_app', 'In-App Notification')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('opened', 'Opened'), ('clicked', 'Clicked'), ('failed', 'Failed'), ('bounced', 'Bounced'), ('unsubscribed', 'Unsubscribed')], default='pending', max_length=20)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('message', models.TextField()),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('opened_at', models.DateTimeField(blank=True, null=True)),
                ('clicked_at', models.DateTimeField(blank=True, null=True)),
                ('external_id', models.CharField(blank=True, help_text='External service ID', max_length=200)),
                ('response_data', models.JSONField(blank=True, default=dict)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('guest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marketing_communications', to='guests.guest')),
                ('email_campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='marketing.emailcampaign')),
                ('sms_campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='marketing.smscampaign')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SMSTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('template_type', models.CharField(choices=[('appointment_confirmation', 'Appointment Confirmation'), ('appointment_reminder', 'Appointment Reminder'), ('cancellation', 'Cancellation'), ('loyalty_points', 'Loyalty Points'), ('birthday', 'Birthday'), ('promotional', 'Promotional'), ('emergency', 'Emergency')], max_length=30)),
                ('message', models.TextField(max_length=1600)),
                ('variables', models.JSONField(default=list, help_text='Available template variables')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['template_type', 'name'],
                'unique_together': {('name', 'template_type')},
            },
        ),
    ]
